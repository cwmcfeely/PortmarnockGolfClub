@page "/members/edit/{MembershipNumber:int}"
@using PortmarnockGolfClub.Models
@using PortmarnockGolfClub.Services
@inject MemberService MemberService
@inject NavigationManager NavigationManager

<h3>Edit Member</h3>

@if (member == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="@member" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group mb-3">
            <label for="membershipNumber">Membership Number</label>
            <InputNumber id="membershipNumber" @bind-Value="member.MembershipNumber" class="form-control" disabled />
        </div>

        <div class="form-group mb-3">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="member.Name" class="form-control" />
            <ValidationMessage For="@(() => member.Name)" />
        </div>

        <div class="form-group mb-3">
            <label for="email">Email</label>
            <InputText id="email" @bind-Value="member.Email" class="form-control" />
            <ValidationMessage For="@(() => member.Email)" />
        </div>

        <div class="form-group mb-3">
            <label for="gender">Gender</label>
            <InputSelect id="gender" @bind-Value="member.Gender" class="form-control">
                <option value="">Select Gender</option>
                <option value="Male">Male</option>
                <option value="Female">Female</option>
            </InputSelect>
            <ValidationMessage For="@(() => member.Gender)" />
        </div>

        <div class="form-group mb-3">
            <label for="handicap">Handicap</label>
            <InputNumber id="handicap" @bind-Value="member.Handicap" class="form-control" />
            <ValidationMessage For="@(() => member.Handicap)" />
        </div>

        <div>
            <button type="submit" class="btn btn-success mt-2">Save</button>
            <a href="/members" class="btn btn-warning mt-2">Cancel</a>
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public int MembershipNumber { get; set; }

    private Member member = new Member();

    protected override async Task OnInitializedAsync()
    {
        member = await MemberService.GetMemberByIdAsync(MembershipNumber) ?? new Member();
    }

    private async Task HandleValidSubmit()
    {
        await MemberService.UpdateMemberAsync(member);
        NavigationManager.NavigateTo("/members");
    }
}
